create database KMS_DSA

SELECT*FROM KMS_SQL

-----Product Category with Highest Sales-----
SELECT PRODUCT_CATEGORY, SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	GROUP BY PRODUCT_CATEGORY
	ORDER BY TOTAL_SALES DESC;
----Top 3 and bottom 3 regions in terms of sales-----
SELECT TOP 3 REGION, SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	GROUP BY REGION
	ORDER BY TOTAL_SALES DESC;

SELECT TOP 3 REGION, SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	GROUP BY REGION
	ORDER BY TOTAL_SALES ASC;

------Total sales of appliances in ontario---
SELECT SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	WHERE PRODUCT_SUB_CATEGORY='Appliances' AND PROVINCE='Ontario';

---Bottom 10 customers---
select TOP 10 CUSTOMER_NAME,SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	GROUP BY CUSTOMER_NAME
	ORDER BY TOTAL_SALES ASC;

-----most expensive shipping method---
SELECT SHIP_MODE, SUM(SHIPPING_COST)AS TOTAL_SHIPPING_COST
FROM KMS_SQL
	GROUP BY SHIP_MODE
	ORDER BY TOTAL_SHIPPING_COST DESC;

------Most valuable customer and the products they purchase----
SELECT CUSTOMER_NAME, SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	GROUP BY CUSTOMER_NAME
	ORDER BY TOTAL_SALES DESC;

SELECT DISTINCT PRODUCT_NAME, PRODUCT_SUB_CATEGORY
FROM KMS_SQL
WHERE CUSTOMER_NAME='Emily Phan';

-----Small business customer with highest sales----
SELECT TOP 1 CUSTOMER_NAME, SUM(SALES) AS TOTAL_SALES
FROM KMS_SQL
	WHERE CUSTOMER_SEGMENT='Small Business'
		GROUP BY CUSTOMER_NAME
		ORDER BY TOTAL_SALES DESC;

--------Corporate Customer placed the most number of orders in 2009–2012-------
SELECT TOP 1 CUSTOMER_NAME,COUNT(ORDER_ID)AS ORDER_COUNT
FROM KMS_SQL
	WHERE CUSTOMER_SEGMENT='CORPORATE'
		GROUP BY CUSTOMER_NAME
		ORDER BY ORDER_COUNT DESC;

-------Most profitable consumer customer-------
SELECT TOP 1 CUSTOMER_NAME, SUM(SALES)AS TOTAL_SALES
FROM KMS_SQL
	WHERE CUSTOMER_SEGMENT='CONSUMER'
		GROUP BY CUSTOMER_NAME
		ORDER BY TOTAL_SALES DESC;


------Customer with returned items and customer segments------
SELECT DISTINCT KMS_SQL.CUSTOMER_NAME, KMS_SQL.CUSTOMER_SEGMENT
FROM KMS_SQL
	JOIN ORDER_STATUS 
		ON KMS_SQL.ORDER_ID=ORDER_STATUS.ORDER_ID;

---------Shipping cost vs order priority------
SELECT ORDER_PRIORITY, SHIP_MODE, COUNT(*)AS ORDER_COUNT, SUM(SHIPPING_COST)AS TOTAL_SHIPPING_COST
FROM KMS_SQL
	GROUP BY ORDER_PRIORITY, SHIP_MODE
	ORDER BY ORDER_PRIORITY, TOTAL_SHIPPING_COST DESC;
	
	select*FROM KMS_SQL